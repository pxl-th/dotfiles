snippet impl "multiline import" b
from ${1:package} import (
    ${2:module},
)
endsnippet

snippet imp "single-line import" b
from ${1:package} import ${2:module}
endsnippet

snippet main "if name is main" b
if __name__ == "__main__":
endsnippet

snippet all "__all__ variable" b
__all__ = [
    ${1}
]
endsnippet

snippet defe "function without docstring" b:
def ${1:name}():
endsnippet

snippet def "function" b:
def ${1:name}():
    """
    Args:
    """
endsnippet

snippet defs "instance method" b:
def ${1:name}(self):
    """
    Args:
    """
endsnippet

snippet defstat "static method" b:
@staticmethod
def ${1:name}():
    """
    Args:
    """
endsnippet

snippet clas "class with initializer" b
class ${1:Class}:
    """
    Attributes:

    Args:
    """
    def __init__(self):
endsnippet

snippet print "print wrapper" i
print(${1:""})
endsnippet

snippet arr "numpy array" i
array(, dtype="${1:int64}")
endsnippet

snippet com "multiline comment" i
"""
${1:}
"""
endsnippet
